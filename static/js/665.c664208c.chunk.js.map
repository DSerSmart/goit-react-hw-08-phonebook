{"version":3,"file":"static/js/665.c664208c.chunk.js","mappings":"6QAOMA,EAAS,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAINC,EAAyBC,EAAAA,KAAaC,MAAM,CAChDL,KAAMI,EAAAA,KACHE,QAHH,yHAKI,0IAEDC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZR,MAAOG,EAAAA,KAAaH,QAAQQ,SAAS,YACrCP,SAAUE,EAAAA,KAAaK,SAAS,cAGrBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAKFE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAelB,EACfmB,iBAAkBf,EAClBgB,SAPmB,SAAApB,GACnBY,GAASS,EAAAA,EAAAA,IAASrB,GACpB,IAQA,OACE,iCACIc,IACA,kBAAMM,SAAUJ,EAAOM,aAAa,WAClC,SAACC,EAAA,EAAS,CACRC,WAAS,EACTC,GAAG,OACHxB,KAAK,OACLyB,MAAM,OACNC,MAAOX,EAAOhB,OAAOC,KACrB2B,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOe,QAAQ9B,MAAQ+B,QAAQhB,EAAOiB,OAAOhC,MACpDiC,WAAYlB,EAAOe,QAAQ9B,MAAQe,EAAOiB,OAAOhC,KACjDkC,OAAO,YAET,SAACZ,EAAA,EAAS,CACRC,WAAS,EACTC,GAAG,QACHxB,KAAK,QACLyB,MAAM,QACNC,MAAOX,EAAOhB,OAAOE,MACrB0B,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOe,QAAQ7B,OAAS8B,QAAQhB,EAAOiB,OAAO/B,OACrDgC,WAAYlB,EAAOe,QAAQ7B,OAASc,EAAOiB,OAAO/B,MAClDiC,OAAO,YAET,SAACZ,EAAA,EAAS,CACRC,WAAS,EACTC,GAAG,WACHxB,KAAK,WACLyB,MAAM,WACNU,KAAK,WACLT,MAAOX,EAAOhB,OAAOG,SACrByB,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOe,QAAQ5B,UAAY6B,QAAQhB,EAAOiB,OAAO9B,UACxD+B,WAAYlB,EAAOe,QAAQ5B,UAAYa,EAAOiB,OAAO9B,SACrDgC,OAAO,YAET,SAACE,EAAA,EAAM,CAACC,MAAM,UAAUC,QAAQ,YAAYf,WAAS,EAACY,KAAK,SAAQ,uBAItE,MAIP,E,UCnFe,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAM,WACL,+CAGF,SAAC9B,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\nimport { Button, TextField } from '@mui/material';\n\nconst values = {\n  name: '',\n  email: '',\n  password: '',\n};\nconst namePattern =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst SignUpValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      namePattern,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const { isAuthLoading } = useAuth();\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  const formik = useFormik({\n    initialValues: values,\n    validationSchema: SignUpValidationSchema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <>\n      {!isAuthLoading && (\n        <form onSubmit={formik.handleSubmit}>\n          <TextField\n            fullWidth\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            margin=\"normal\"\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n        </form>\n      )}\n      ;\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["values","name","email","password","SignUpValidationSchema","Yup","shape","matches","min","max","required","RegisterForm","dispatch","useDispatch","isAuthLoading","useAuth","formik","useFormik","initialValues","validationSchema","onSubmit","register","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","margin","type","Button","color","variant","Register","Helmet"],"sourceRoot":""}